<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>BOSH on Brian Cunnie&#39;s Technical Blog</title>
    <link>https://blog.nono.io/categories/bosh/</link>
    <description>Recent content in BOSH on Brian Cunnie&#39;s Technical Blog</description>
    <image>
      <title>Brian Cunnie&#39;s Technical Blog</title>
      <url>https://nono.io/images/brian_cunnie_profile.jpg</url>
      <link>https://nono.io/images/brian_cunnie_profile.jpg</link>
    </image>
    <generator>Hugo -- 0.147.9</generator>
    <language>en</language>
    <lastBuildDate>Sat, 01 Feb 2020 01:16:22 +0000</lastBuildDate>
    <atom:link href="https://blog.nono.io/categories/bosh/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How To Enable IPv6 on Your Cloud Foundry&#39;s HAProxy</title>
      <link>https://blog.nono.io/post/haproxy-ipv6/</link>
      <pubDate>Sat, 01 Feb 2020 01:16:22 +0000</pubDate>
      <guid>https://blog.nono.io/post/haproxy-ipv6/</guid>
      <description>&lt;h3 id=&#34;0-abstract&#34;&gt;0. Abstract&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://www.haproxy.org/&#34;&gt;HAProxy&lt;/a&gt; is an optional load balancer included in
the canonical open source &lt;a href=&#34;https://github.com/cloudfoundry/cf-deployment&#34;&gt;Cloud Foundry
deployment&lt;/a&gt;. Its intended use is
on IaaSes (Infrastructures as a Service) that do not offer built-in load
balancers [0]. On vSphere, this means without the optional network
virtualization solutions, NSX-T and NSX-V. This blog post describes how to
assign an IPv6 address to an HAProxy load balancer in a Cloud Foundry
deployment.&lt;/p&gt;
&lt;h3 id=&#34;1-pre-requisites&#34;&gt;1. Pre-requisites&lt;/h3&gt;
&lt;p&gt;Users following this blog post should be familiar with BOSH, BOSH&amp;rsquo;s manifest
operations files, IPv6, and deploying Cloud Foundry using &lt;em&gt;cf-deployment&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Safely Upgrading PAS 2.2 with NSX-T Load Balancers</title>
      <link>https://blog.nono.io/post/upgrade_2.2-2.3_on_nsx-t/</link>
      <pubDate>Thu, 06 Sep 2018 10:44:30 +0000</pubDate>
      <guid>https://blog.nono.io/post/upgrade_2.2-2.3_on_nsx-t/</guid>
      <description>&lt;p&gt;When customers with vSphere+NSX-T-based foundations apply a stemcell update,
update a tile, or upgrade PAS (Pivotal Application Service) from 2.2 to 2.3,
their Cloud Foundry may become unreachable as their NSX-T static load balancer
server pools have been emptied.&lt;/p&gt;
&lt;p&gt;This blog post describes a method to ensure availability during upgrades. We
use a combination of customized Operations Manager &lt;a href=&#34;https://docs.pivotal.io/pivotalcf/2-2/customizing/config-er-vmware.html#resources&#34;&gt;resource
configs&lt;/a&gt;
and BOSH &lt;a href=&#34;https://bosh.io/docs/terminology/#vm-extension&#34;&gt;VM Extensions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The sample workflow in this post is for upgrading PAS 2.2 to PAS 2.3 with an
Operations Manager upgrade; however, it can also be adapted to stemcell or
tile upgrades as well.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Benchmarking the Disk Speed of IaaSes</title>
      <link>https://blog.nono.io/post/gobonniego_results/</link>
      <pubDate>Fri, 16 Mar 2018 20:00:22 +0000</pubDate>
      <guid>https://blog.nono.io/post/gobonniego_results/</guid>
      <description>&lt;h2 id=&#34;0-overview&#34;&gt;0. Overview&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;[Disclaimer: the author works for Pivotal Software, of which Dell is an
investor. Dell is also an owner of VMware]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s helpful to know the performance characteristics of disks when selecting a
disk type. For example, the performance of a database server will be greatly
affected by the &lt;a href=&#34;https://en.wikipedia.org/wiki/IOPS&#34;&gt;IOPS&lt;/a&gt; of the underlying
storage. Similarly, a video-streaming server will be affected by the
underlying read throughput.&lt;/p&gt;
&lt;h3 id=&#34;00-highlights&#34;&gt;0.0 Highlights:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;If you need a fast disk, nothing beats a local vSphere NVMe drive. Nothing.
Whether its IOPS, read throughput, or write throughput, NVMe is the
winner hands down.&lt;/li&gt;
&lt;li&gt;Google&amp;rsquo;s SSD (Solid State Drive) storage has 22× the IOPS of its standard
storage. For general purpose use, always go with the SSD; however, if you&amp;rsquo;re
doing streaming (long reads or writes), the standard storage may be the better
(and cheaper) choice.&lt;/li&gt;
&lt;li&gt;AWS&amp;rsquo;s io1 disk is a waste of money unless you need an IOPS &amp;gt; 4k (the
gp2 disk has an IOPS of ~4k). AWS&amp;rsquo;s now-deprecated standard storage
has a decent IOPS of ~2k.&lt;/li&gt;
&lt;li&gt;The key to getting IOPS out of Azure is to enable &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/virtual-machines/windows/premium-storage-performance#disk-caching&#34;&gt;Host Disk
Caching&lt;/a&gt;,
which can catapult an anemic 120 IOPS to a competitive 8k IOPS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;01-metrics-iaases-and-results&#34;&gt;0.1 Metrics, IaaSes, and Results&lt;/h3&gt;
&lt;p&gt;In this blog post we record three metrics:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploying BOSH VMs with IPv6 Addresses on vSphere</title>
      <link>https://blog.nono.io/post/bosh-on-ipv6-2/</link>
      <pubDate>Tue, 16 Jan 2018 19:12:22 +0000</pubDate>
      <guid>https://blog.nono.io/post/bosh-on-ipv6-2/</guid>
      <description>&lt;h2 id=&#34;0-abstract&#34;&gt;0. Abstract&lt;/h2&gt;
&lt;p&gt;BOSH is a VM orchestrator; a BOSH Director creates, configures, monitors, and
deletes VMs. The BOSH Director interoperates with a number of IaaSes
(Infrastructure as a Service), one of which is VMware vSphere, a virtualization
platform. BOSH traditionally operates exclusively within the IPv4 networking
space (i.e. the BOSH Director has an IPv4 address (e.g. 10.0.0.6), and the VMs
which it deploys also have IPv4 addresses); however, recent changes have
enabled IPv6 networking within the BOSH Framework.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Maintaining BOSH Directors with Concourse CI and bosh-deployment</title>
      <link>https://blog.nono.io/post/bosh-deployed-with-concourse/</link>
      <pubDate>Fri, 24 Nov 2017 14:06:25 +0000</pubDate>
      <guid>https://blog.nono.io/post/bosh-deployed-with-concourse/</guid>
      <description>&lt;p&gt;&lt;em&gt;&amp;ldquo;BOSH deploys Concourse, and Concourse deploys BOSH&amp;rdquo; —Cloud Foundry koan&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A BOSH Director is a VM (virtual machine) orchestrator which is itself a VM.
BOSH solves the problem of keeping its VMs&amp;rsquo; applications (operating systems
(stemcells) and releases) up-to-date with the command, &lt;code&gt;bosh deploy&lt;/code&gt;; however,
this begs the question, &amp;ldquo;what keeps the BOSH Director itself up-to-date?&amp;rdquo;.
&lt;sup&gt;&lt;a href=&#34;#quis&#34; class=&#34;alert-link&#34;&gt;[Quis custodiet?]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;We explore using &lt;a href=&#34;https://concourse.ci/&#34;&gt;Concourse&lt;/a&gt;, a Continuous Integration
(CI) server, and
&lt;a href=&#34;https://github.com/cloudfoundry/bosh-deployment/&#34;&gt;bosh-deployment&lt;/a&gt; &lt;sup&gt;&lt;a
href=&#34;#bosh_up_to_date&#34; class=&#34;alert-link&#34;&gt;[Updating BOSH]&lt;/a&gt;&lt;/sup&gt;, in order
to create a &lt;a href=&#34;https://github.com/cloudfoundry/bosh-deployment/&#34;&gt;Concourse
pipeline&lt;/a&gt; which updates, in
turn, a BOSH director on AWS (Amazon Web Services), on Microsoft Azure, and GCP
(Google Cloud Platform). Updating all three BOSH directors can be accomplished
with a single click. &lt;sup&gt;&lt;a href=&#34;#one_click&#34; class=&#34;alert-link&#34;&gt;[One
click]&lt;/a&gt;&lt;/sup&gt; Best of all, our directors are re-deployed with a recent
stemcell, BOSH release, and CPI release.  &lt;sup&gt;&lt;a href=&#34;#how_recent&#34;
class=&#34;alert-link&#34;&gt;[How recent?]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploying a BOSH Director With SSL Certificates Issued by Commercial CA</title>
      <link>https://blog.nono.io/post/bosh-ssl/</link>
      <pubDate>Wed, 16 Aug 2017 17:16:22 +0000</pubDate>
      <guid>https://blog.nono.io/post/bosh-ssl/</guid>
      <description>&lt;h2 id=&#34;0-abstract&#34;&gt;0. Abstract&lt;/h2&gt;
&lt;p&gt;A BOSH director is a virtual machine (VM) orchestrator which deploys VMs to
various Infrastructures as a Service (IaaS) such as Amazon Web Services (AWS)
and Google Cloud Platform (GCP). The BOSH Command Line (CLI) communicates with
the director over Secure Sockets Layer (SSL). While most BOSH directors are
deployed with self-signed certificates, it is possible to configure a BOSH
director with certificates issued by a recognized certificate authority (CA)
(e.g. Comodo, Symantec, Let&amp;rsquo;s Encrypt). This blog post describes a technique to
deploy a BOSH director with a CA-issued SSL certificate.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploy To vSphere NSX-T Opaque Networks Using BOSH</title>
      <link>https://blog.nono.io/post/bosh-vsphere-opaque-networks/</link>
      <pubDate>Mon, 17 Apr 2017 11:43:14 -0700</pubDate>
      <guid>https://blog.nono.io/post/bosh-vsphere-opaque-networks/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.vmware.com/products/vsphere.html&#34;&gt;VMware&amp;rsquo;s vSphere&lt;/a&gt; is an
Infrastructure as a Service (IaaS) which runs Virtual Machines (VMs).
&lt;a href=&#34;http://bosh.io/docs/about.html&#34;&gt;BOSH&lt;/a&gt; is a VM orchestrator which automates the
creation of VMs.  &lt;a href=&#34;https://www.vmware.com/support/pubs/nsxt_pubs.html&#34;&gt;NSX-T&lt;/a&gt;
is a pluggable Network backend for vSphere (and other hypervisors). NSX-T
allows the creation of opaque networks in vSphere, networks whose detail and
configuration of the network is unknown to vSphere and which is managed outside
vSphere.&lt;/p&gt;
&lt;p&gt;With the release of &lt;a href=&#34;http://bosh.io/releases/github.com/cloudfoundry-incubator/bosh-vsphere-cpi-release?all=1&#34;&gt;BOSH vSphere CPI
v40&lt;/a&gt;,
users can attach their BOSH-deployed VMs to an NSX-T opaque network.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using the beta BOSH CLI to Deploy an IPv6-enabled nginx Server to AWS</title>
      <link>https://blog.nono.io/post/bosh-on-ipv6/</link>
      <pubDate>Tue, 20 Dec 2016 20:49:50 +0000</pubDate>
      <guid>https://blog.nono.io/post/bosh-on-ipv6/</guid>
      <description>&lt;p&gt;This blog post describes the procedure we followed to use the &lt;a href=&#34;https://bosh.io/docs/cli-v2.html&#34;&gt;beta BOSH command
line interface (CLI)&lt;/a&gt; to deploy an nginx
webserver with a native IPv6 address (i.e. 2600:1f16:0a62:5c00::4) to AWS in
addition  to its IPv4 Elastic IP address (i.e. 52.15.73.90).  We were then able
to browse the webserver &lt;em&gt;via the IPv6 protocol.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-error&#34; role=&#34;alert&#34;&gt;
&lt;p&gt;BOSH does not support IPv6. This is a proof-of-concept. Do not apply IPv6 to
your production BOSH Directors or to BOSH CLI-deployed systems.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Leveraging NSX&#39;s Features with BOSH&#39;s vSphere CPI</title>
      <link>https://blog.nono.io/post/nsx_with_bosh/</link>
      <pubDate>Tue, 01 Nov 2016 09:15:02 -0700</pubDate>
      <guid>https://blog.nono.io/post/nsx_with_bosh/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.vmware.com/products/nsx.html&#34;&gt;VMWare NSX&lt;/a&gt; is a network
virtualization platform (frequently paired with the vSphere IaaS (Infrastructure
as a Service)). It includes features such as Load Balancers (LBs) and firewall
rules, features often found in public-facing IaaSes (e.g. AWS (Amazon Web
Services), GCE (Google Compute Engine), and Microsoft Azure) but not native to
vSphere.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bosh.io/&#34;&gt;BOSH&lt;/a&gt;, a VM orchestrator, includes hooks to interoperate with
NSX&amp;rsquo;s LB and Distributed Firewall features. These hooks enable BOSH to attach
created VMs to existing NSX Load Balancer Pools and NSX Distributed Firewall
rulesets. BOSH uses NSX&amp;rsquo;s Security Groups &lt;sup&gt;&lt;a href=&#34;#nsx_security_groups&#34;
class=&#34;alert-link&#34;&gt;[NSX Security Groups]&lt;/a&gt;&lt;/sup&gt; as the underlying mechanism.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Customize a BOSH Stemcell</title>
      <link>https://blog.nono.io/post/bosh-customize-stemcell/</link>
      <pubDate>Fri, 23 Sep 2016 05:35:01 -0700</pubDate>
      <guid>https://blog.nono.io/post/bosh-customize-stemcell/</guid>
      <description>&lt;p&gt;In this blog post, we describe the procedure we followed in order to create a
custom Google Compute Engine (GCE) stemcell with a user &lt;code&gt;cunnie&lt;/code&gt; whose
&lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; is pre-populated with a specific public key.&lt;/p&gt;
&lt;div class=&#34;alert alert-error&#34; role=&#34;alert&#34;&gt;
&lt;p&gt;Customizing stemcells is highly discouraged — it voids your warranty, and opens
a host of problems which will only cause pain. This post is intended as an
educational demonstration of the stemcell building process. You have been warned.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Updating a BOSH Release</title>
      <link>https://blog.nono.io/post/updating-a-bosh-release/</link>
      <pubDate>Sun, 18 Sep 2016 10:15:30 -0700</pubDate>
      <guid>https://blog.nono.io/post/updating-a-bosh-release/</guid>
      <description>&lt;p&gt;When &lt;a href=&#34;https://www.powerdns.com/&#34;&gt;PowerDNS&lt;/a&gt; released version 4.0.1 of their
authoritative nameserver, we rushed to update our &lt;a href=&#34;https://github.com/cloudfoundry-community/pdns-release&#34;&gt;BOSH
Release&lt;/a&gt; (which was at
version 4.0.0). We thought it would be a walk in the park, but instead it was an
&lt;a href=&#34;https://github.com/cloudfoundry-community/pdns-release/commit/9e71c74bbf232896fb1865b19568b7eb1dfa6fa7&#34;&gt;epic
fail&lt;/a&gt;
(a final release which couldn&amp;rsquo;t be deployed because the blobs were broken).&lt;/p&gt;
&lt;p&gt;In this blog post we describe the procedure we ultimately followed to
successfully create an updated BOSH final release of version 4.0.1 of the
PowerDNS authoritative nameserver, highlighting some of the tricky and
non-obvious steps.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Concourse without a Load Balancer</title>
      <link>https://blog.nono.io/post/concourse-no-elb/</link>
      <pubDate>Fri, 26 Aug 2016 06:58:07 -0700</pubDate>
      <guid>https://blog.nono.io/post/concourse-no-elb/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://concourse.ci/&#34;&gt;Concourse&lt;/a&gt; is a continuous integration (CI) server. It
can be deployed manually or via
&lt;a href=&#34;http://concourse.ci/clusters-with-bosh.html&#34;&gt;BOSH&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this blog post, we describe the BOSH deployment of a Concourse CI server to
natively accept Secure Sockets Layer (SSL) connections without using a load
balancer. This may reduce the complexity and cost
&lt;sup&gt;&lt;a href=&#34;https://blog.nono.io/post/concourse-no-elb/#ELB-pricing&#34;&gt;[ELB-pricing]&lt;/a&gt;&lt;/sup&gt; of a Concourse deployment.&lt;/p&gt;
&lt;div class=&#34;alert alert-danger&#34; role=&#34;alert&#34;&gt; 2016-09-12: This blog post is
obsolete. Newer (v2.0.0+) versions of Concourse allow binding to the privileged
ports 80 and 443, eliminating the need for an nginx proxy. Here is an example
of a BOSH-deployed Concourse server that binds natively to ports 80 &amp; 443: &lt;a
href=&#34;https://github.com/cunnie/deployments/blob/62d0ed813879440f656b6e0bd6f984d708c4bff2/concourse-ntp-pdns-gce.yml#L48-L51&#34;&gt;BOSH
manifest&lt;/a&gt;.  &lt;/div&gt;
&lt;h3 id=&#34;0-pre-requisites&#34;&gt;0. Pre-requisites&lt;/h3&gt;
&lt;p&gt;Deploy Concourse with BOSH. Follow the instructions
&lt;a href=&#34;http://concourse.ci/clusters-with-bosh.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Deploy a Multi-homed BOSH Director to a vSphere Environment</title>
      <link>https://blog.nono.io/post/multi-homed-bosh-director/</link>
      <pubDate>Fri, 13 May 2016 13:37:44 -0700</pubDate>
      <guid>https://blog.nono.io/post/multi-homed-bosh-director/</guid>
      <description>&lt;p&gt;vSphere users ask, &amp;ldquo;How do I configure my BOSH director so that it can
communicate with my vCenter but the director&amp;rsquo;s deployed VMs can&amp;rsquo;t?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;One technique is to use a multi-homed BOSH director combined with the BOSH &lt;a href=&#34;https://github.com/cloudfoundry/networking-release&#34;&gt;Networking
Release&lt;/a&gt; (a BOSH release
which enables customization of the VM&amp;rsquo;s routing table, allowing more routes
than the default gateway).&lt;/p&gt;
&lt;h2 id=&#34;network-diagram&#34;&gt;Network Diagram&lt;/h2&gt;
&lt;p&gt;The following is a network diagram of our deployment. We want to protect the
assets at the top (in blue): the vCenter server and its associated ESXi servers.
These machines are particularly sensitive as they control hundreds of VMs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The World&#39;s Smallest Concourse CI Server</title>
      <link>https://blog.nono.io/post/worlds-smallest-concourse-server/</link>
      <pubDate>Sat, 24 Oct 2015 13:52:48 -0700</pubDate>
      <guid>https://blog.nono.io/post/worlds-smallest-concourse-server/</guid>
      <description>&lt;h3 id=&#34;heading&#34;&gt;&lt;em&gt;[2016-04-06: This Blog Post is out-of-date; Please refer to the official &lt;a href=&#34;http://concourse.ci/installing.html&#34;&gt;Concourse documentation&lt;/a&gt; for instructions how to install a Concourse server]&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_integration&#34;&gt;Continuous Integration&lt;/a&gt;
(CI) is often used in conjunction with test-driven development (TDD);
however, CI servers often
bring their own set of challenges: they are usually &amp;ldquo;snowflakes&amp;rdquo;,
uniquely configured machines that are difficult to upgrade, re-configure, or
re-install. &lt;sup&gt;&lt;a href=&#34;https://blog.nono.io/post/worlds-smallest-concourse-server/#snowflakes&#34;&gt;[snowflakes]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;In this blog post, we describe deploying a publicly-accessible, lean
(1GB RAM, 1 vCPU, 15GB disk)
&lt;a href=&#34;http://concourse.ci/&#34;&gt;Concourse&lt;/a&gt; CI server using a 350-line manifest.
Upgrades/re-configurations/re-installs are as simple as editing a file
and typing one command (&lt;em&gt;bosh-init&lt;/em&gt;).&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
